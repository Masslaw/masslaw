{
  "service": {
    "service": "masslawAPI",
    "serviceObject": {
      "name": "masslawAPI"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.8",
      "region": "us-east-1",
      "deploymentMethod": "direct",
      "stage": "dev",
      "environment": {
        "STAGE": "dev"
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "GetDashuserDashstatusLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/masslawAPI-dev-get-user-status"
            }
          },
          "GetDashuserDashdataLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/masslawAPI-dev-get-user-data"
            }
          },
          "SetDashuserDashdataLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/masslawAPI-dev-set-user-data"
            }
          },
          "CreateDashcaseLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/masslawAPI-dev-create-case"
            }
          },
          "GetDashmyDashcasesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/masslawAPI-dev-get-my-cases"
            }
          },
          "GetDashcaseDashdataDashDashdeprecatedLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/masslawAPI-dev-get-case-data--deprecated"
            }
          },
          "GetDashcaseDashdataLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/masslawAPI-dev-get-case-data"
            }
          },
          "SetDashcaseDashdataLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/masslawAPI-dev-set-case-data"
            }
          },
          "GetDashcaseDashfilesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/masslawAPI-dev-get-case-files"
            }
          },
          "StartDashcaseDashfileDashuploadLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/masslawAPI-dev-start-case-file-upload"
            }
          },
          "FinishDashcaseDashfileDashuploadLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/masslawAPI-dev-finish-case-file-upload"
            }
          },
          "GetDashcaseDashfileDashcontentLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/masslawAPI-dev-get-case-file-content"
            }
          },
          "GetDashcaseDashfileDashdataLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/masslawAPI-dev-get-case-file-data"
            }
          },
          "DeleteDashcaseDashfileLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/masslawAPI-dev-delete-case-file"
            }
          },
          "SearchDashcaseDashfilesDashtextLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/masslawAPI-dev-search-case-files-text"
            }
          },
          "GetDashcaseDashannotationsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/masslawAPI-dev-get-case-annotations"
            }
          },
          "SetDashcaseDashannotationLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/masslawAPI-dev-set-case-annotation"
            }
          },
          "DeleteDashcaseDashannotationLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/masslawAPI-dev-delete-case-annotation"
            }
          },
          "SearchDashcaseDashannotationsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/masslawAPI-dev-search-case-annotations"
            }
          },
          "SetDashcaseDashfileDashdescriptionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/masslawAPI-dev-set-case-file-description"
            }
          },
          "GetDashuserDashstatusLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/masslawAPI/dev/1697986002198-2023-10-22T14:46:42.198Z/get-user-status.zip"
              },
              "Handler": "lambda_src/handlers/masslaw_api/users_management/get_user_status.handler.handler",
              "Runtime": "python3.8",
              "FunctionName": "masslawAPI-dev-get-user-status",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "deployed": "true"
                }
              },
              "Role": "arn:aws:iam::746826375642:role/LambdaFullyAccessingCognito"
            },
            "DependsOn": [
              "GetDashuserDashstatusLogGroup"
            ]
          },
          "GetDashuserDashdataLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/masslawAPI/dev/1697986002198-2023-10-22T14:46:42.198Z/get-user-data.zip"
              },
              "Handler": "lambda_src/handlers/masslaw_api/users_management/get_user_data.handler.handler",
              "Runtime": "python3.8",
              "FunctionName": "masslawAPI-dev-get-user-data",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "deployed": "true"
                }
              },
              "Role": "arn:aws:iam::746826375642:role/LambdaFullyAccessingCognito"
            },
            "DependsOn": [
              "GetDashuserDashdataLogGroup"
            ]
          },
          "SetDashuserDashdataLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/masslawAPI/dev/1697986002198-2023-10-22T14:46:42.198Z/set-user-data.zip"
              },
              "Handler": "lambda_src/handlers/masslaw_api/users_management/set_user_data.handler.handler",
              "Runtime": "python3.8",
              "FunctionName": "masslawAPI-dev-set-user-data",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "deployed": "true"
                }
              },
              "Role": "arn:aws:iam::746826375642:role/LambdaFullyAccessingCognito"
            },
            "DependsOn": [
              "SetDashuserDashdataLogGroup"
            ]
          },
          "CreateDashcaseLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/masslawAPI/dev/1697986002198-2023-10-22T14:46:42.198Z/create-case.zip"
              },
              "Handler": "lambda_src/handlers/masslaw_api/cases_management/create_case.handler.handler",
              "Runtime": "python3.8",
              "FunctionName": "masslawAPI-dev-create-case",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "deployed": "true"
                }
              },
              "Role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole"
            },
            "DependsOn": [
              "CreateDashcaseLogGroup"
            ]
          },
          "GetDashmyDashcasesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/masslawAPI/dev/1697986002198-2023-10-22T14:46:42.198Z/get-my-cases.zip"
              },
              "Handler": "lambda_src/handlers/masslaw_api/cases_management/get_my_cases.handler.handler",
              "Runtime": "python3.8",
              "FunctionName": "masslawAPI-dev-get-my-cases",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "deployed": "true"
                }
              },
              "Role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole"
            },
            "DependsOn": [
              "GetDashmyDashcasesLogGroup"
            ]
          },
          "GetDashcaseDashdataDashDashdeprecatedLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/masslawAPI/dev/1697986002198-2023-10-22T14:46:42.198Z/get-case-data--deprecated.zip"
              },
              "Handler": "lambda_src/handlers/masslaw_api/cases_management/get_case_data.handler.handler",
              "Runtime": "python3.8",
              "FunctionName": "masslawAPI-dev-get-case-data--deprecated",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "deployed": "true"
                }
              },
              "Role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole"
            },
            "DependsOn": [
              "GetDashcaseDashdataDashDashdeprecatedLogGroup"
            ]
          },
          "GetDashcaseDashdataLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/masslawAPI/dev/1697986002198-2023-10-22T14:46:42.198Z/get-case-data.zip"
              },
              "Handler": "lambda_src/handlers/masslaw_api/cases_management/get_case_data.handler.handler",
              "Runtime": "python3.8",
              "FunctionName": "masslawAPI-dev-get-case-data",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "deployed": "true"
                }
              },
              "Role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole"
            },
            "DependsOn": [
              "GetDashcaseDashdataLogGroup"
            ]
          },
          "SetDashcaseDashdataLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/masslawAPI/dev/1697986002198-2023-10-22T14:46:42.198Z/set-case-data.zip"
              },
              "Handler": "lambda_src/handlers/masslaw_api/cases_management/set_case_data.handler.handler",
              "Runtime": "python3.8",
              "FunctionName": "masslawAPI-dev-set-case-data",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "deployed": "true"
                }
              },
              "Role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole"
            },
            "DependsOn": [
              "SetDashcaseDashdataLogGroup"
            ]
          },
          "GetDashcaseDashfilesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/masslawAPI/dev/1697986002198-2023-10-22T14:46:42.198Z/get-case-files.zip"
              },
              "Handler": "lambda_src/handlers/masslaw_api/cases_management/get_case_files_data.handler.handler",
              "Runtime": "python3.8",
              "FunctionName": "masslawAPI-dev-get-case-files",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "deployed": "true"
                }
              },
              "Role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole"
            },
            "DependsOn": [
              "GetDashcaseDashfilesLogGroup"
            ]
          },
          "StartDashcaseDashfileDashuploadLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/masslawAPI/dev/1697986002198-2023-10-22T14:46:42.198Z/start-case-file-upload.zip"
              },
              "Handler": "lambda_src/handlers/masslaw_api/cases_management/start_case_file_upload.handler.handler",
              "Runtime": "python3.8",
              "FunctionName": "masslawAPI-dev-start-case-file-upload",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "deployed": "true"
                }
              },
              "Role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole"
            },
            "DependsOn": [
              "StartDashcaseDashfileDashuploadLogGroup"
            ]
          },
          "FinishDashcaseDashfileDashuploadLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/masslawAPI/dev/1697986002198-2023-10-22T14:46:42.198Z/finish-case-file-upload.zip"
              },
              "Handler": "lambda_src/handlers/masslaw_api/cases_management/finish_case_file_upload.handler.handler",
              "Runtime": "python3.8",
              "FunctionName": "masslawAPI-dev-finish-case-file-upload",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "deployed": "true"
                }
              },
              "Role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole"
            },
            "DependsOn": [
              "FinishDashcaseDashfileDashuploadLogGroup"
            ]
          },
          "GetDashcaseDashfileDashcontentLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/masslawAPI/dev/1697986002198-2023-10-22T14:46:42.198Z/get-case-file-content.zip"
              },
              "Handler": "lambda_src/handlers/masslaw_api/cases_management/get_case_file_content.handler.handler",
              "Runtime": "python3.8",
              "FunctionName": "masslawAPI-dev-get-case-file-content",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "deployed": "true"
                }
              },
              "Role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole"
            },
            "DependsOn": [
              "GetDashcaseDashfileDashcontentLogGroup"
            ]
          },
          "GetDashcaseDashfileDashdataLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/masslawAPI/dev/1697986002198-2023-10-22T14:46:42.198Z/get-case-file-data.zip"
              },
              "Handler": "lambda_src/handlers/masslaw_api/cases_management/get_case_file_data.handler.handler",
              "Runtime": "python3.8",
              "FunctionName": "masslawAPI-dev-get-case-file-data",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "deployed": "true"
                }
              },
              "Role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole"
            },
            "DependsOn": [
              "GetDashcaseDashfileDashdataLogGroup"
            ]
          },
          "DeleteDashcaseDashfileLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/masslawAPI/dev/1697986002198-2023-10-22T14:46:42.198Z/delete-case-file.zip"
              },
              "Handler": "lambda_src/handlers/masslaw_api/cases_management/delete_case_file.handler.handler",
              "Runtime": "python3.8",
              "FunctionName": "masslawAPI-dev-delete-case-file",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "deployed": "true"
                }
              },
              "Role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole"
            },
            "DependsOn": [
              "DeleteDashcaseDashfileLogGroup"
            ]
          },
          "SearchDashcaseDashfilesDashtextLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/masslawAPI/dev/1697986002198-2023-10-22T14:46:42.198Z/search-case-files-text.zip"
              },
              "Handler": "lambda_src/handlers/masslaw_api/cases_management/search_case_files_text.handler.handler",
              "Runtime": "python3.8",
              "FunctionName": "masslawAPI-dev-search-case-files-text",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "deployed": "true"
                }
              },
              "Role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole"
            },
            "DependsOn": [
              "SearchDashcaseDashfilesDashtextLogGroup"
            ]
          },
          "GetDashcaseDashannotationsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/masslawAPI/dev/1697986002198-2023-10-22T14:46:42.198Z/get-case-annotations.zip"
              },
              "Handler": "lambda_src/handlers/masslaw_api/cases_management/get_case_annotations.handler.handler",
              "Runtime": "python3.8",
              "FunctionName": "masslawAPI-dev-get-case-annotations",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "deployed": "true"
                }
              },
              "Role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole"
            },
            "DependsOn": [
              "GetDashcaseDashannotationsLogGroup"
            ]
          },
          "SetDashcaseDashannotationLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/masslawAPI/dev/1697986002198-2023-10-22T14:46:42.198Z/set-case-annotation.zip"
              },
              "Handler": "lambda_src/handlers/masslaw_api/cases_management/set_case_file_annotation.handler.handler",
              "Runtime": "python3.8",
              "FunctionName": "masslawAPI-dev-set-case-annotation",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "deployed": "true"
                }
              },
              "Role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole"
            },
            "DependsOn": [
              "SetDashcaseDashannotationLogGroup"
            ]
          },
          "DeleteDashcaseDashannotationLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/masslawAPI/dev/1697986002198-2023-10-22T14:46:42.198Z/delete-case-annotation.zip"
              },
              "Handler": "lambda_src/handlers/masslaw_api/cases_management/delete_case_file_annotation.handler.handler",
              "Runtime": "python3.8",
              "FunctionName": "masslawAPI-dev-delete-case-annotation",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "deployed": "true"
                }
              },
              "Role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole"
            },
            "DependsOn": [
              "DeleteDashcaseDashannotationLogGroup"
            ]
          },
          "SearchDashcaseDashannotationsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/masslawAPI/dev/1697986002198-2023-10-22T14:46:42.198Z/search-case-annotations.zip"
              },
              "Handler": "lambda_src/handlers/masslaw_api/cases_management/set_case_file_annotation.handler.handler",
              "Runtime": "python3.8",
              "FunctionName": "masslawAPI-dev-search-case-annotations",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "deployed": "true"
                }
              },
              "Role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole"
            },
            "DependsOn": [
              "SearchDashcaseDashannotationsLogGroup"
            ]
          },
          "SetDashcaseDashfileDashdescriptionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/masslawAPI/dev/1697986002198-2023-10-22T14:46:42.198Z/set-case-file-description.zip"
              },
              "Handler": "lambda_src/handlers/masslaw_api/cases_management/set_case_file_description.handler.handler",
              "Runtime": "python3.8",
              "FunctionName": "masslawAPI-dev-set-case-file-description",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "STAGE": "dev",
                  "deployed": "true"
                }
              },
              "Role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole"
            },
            "DependsOn": [
              "SetDashcaseDashfileDashdescriptionLogGroup"
            ]
          },
          "GetDashuserDashdataLambdaVersionT3wjhpTzjpt8eW2F2qK6oO5CAPj8xA6XXWNYjMVI50": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetDashuserDashdataLambdaFunction"
              },
              "CodeSha256": "MJY1KFGU+xyv3i7hro4nSpS5W09e2/67d4lmKWttSHw="
            }
          },
          "GetDashuserDashstatusLambdaVersionwSOMYlwXd6fh1CDrDGaWgb6UKRKXk7a5YL3sRYLWn8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetDashuserDashstatusLambdaFunction"
              },
              "CodeSha256": "xxxsCefl1gJI8LQpStSC7hCZXCQ4VJv7nb5S8rb0rhY="
            }
          },
          "GetDashmyDashcasesLambdaVersion3EfVnfIwszqYaHNfbYx7Y5sXLiaVWw0AfFS5E0P0o": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetDashmyDashcasesLambdaFunction"
              },
              "CodeSha256": "0MivFcsrq4xebEAucim05FykEvNv1u9LOEwDwHSG5hY="
            }
          },
          "GetDashcaseDashdataDashDashdeprecatedLambdaVersionE2rXNtAxJq4xODv4pZUPyBW4DZ6i8K53qW3gHFqC8kk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetDashcaseDashdataDashDashdeprecatedLambdaFunction"
              },
              "CodeSha256": "lbLqyWZVXbA/EUYZ0L/SZMZmOtaP2J7LqVhAqe1G2Xg="
            }
          },
          "GetDashcaseDashdataLambdaVersiony3qGFhhlxCHqpMDVvhc9SSmfKEhQAE2RY0MnTz2uX4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetDashcaseDashdataLambdaFunction"
              },
              "CodeSha256": "lbLqyWZVXbA/EUYZ0L/SZMZmOtaP2J7LqVhAqe1G2Xg="
            }
          },
          "SetDashuserDashdataLambdaVersion4dXiS81wTqPqI7MbnlNN3Z1Xu1H1fa2XXhnyzTnT8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SetDashuserDashdataLambdaFunction"
              },
              "CodeSha256": "rOYy0ZN/qpZh3OvPt3noZrS1b6aOwkemn8EjpV8yWKY="
            }
          },
          "CreateDashcaseLambdaVersiondB0EcuMfGldqNMaQ7Xjq9sG7nr81Ejc9ZqweEssVu0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateDashcaseLambdaFunction"
              },
              "CodeSha256": "CEjb8jPeTycplFRCUoidwDFqc7fVFSWqaMmy6KuB2M0="
            }
          },
          "GetDashcaseDashfilesLambdaVersionq9feoxve9DEuPWzmPlYuGll8qFlDoM1hLazf6WkKk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetDashcaseDashfilesLambdaFunction"
              },
              "CodeSha256": "CAF+W7OVh/cuvXkW7OOkJBczklRRz21GIio8hJmmjFc="
            }
          },
          "SetDashcaseDashdataLambdaVersionMU0PLp4Or4KddvzUeeJfRVE49vw5WJDyRJi2POfw3tA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SetDashcaseDashdataLambdaFunction"
              },
              "CodeSha256": "qwEkdWx/yK+gbnf3+QFtXdxjyyz+Scxhq8KZaTM4Hpo="
            }
          },
          "GetDashcaseDashfileDashcontentLambdaVersionJs4dIobnxiyihsxnQohFOL7s5OduhMrEdQehx0Z9c": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetDashcaseDashfileDashcontentLambdaFunction"
              },
              "CodeSha256": "v5Wpj12n8B8Da+3TPAOtVV9ALpI8o9lSNrxYlOySjsM="
            }
          },
          "StartDashcaseDashfileDashuploadLambdaVersionbKzRKhJP79MfKMzG9qBebcD5SX5t3zmJM6GICJgLo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "StartDashcaseDashfileDashuploadLambdaFunction"
              },
              "CodeSha256": "6WPDJhCtZ1KViMmrjeRtmnPbuW7RkY+k7XY25metGvo="
            }
          },
          "FinishDashcaseDashfileDashuploadLambdaVersion5aFEkhXSaOOlHUP4G7DL2ovXHDwKv9BfvbMXEa0M": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FinishDashcaseDashfileDashuploadLambdaFunction"
              },
              "CodeSha256": "77Q93e0NZK3dw35dvcrgbD9aSa6FoCG5wxLBicGG+Mg="
            }
          },
          "DeleteDashcaseDashfileLambdaVersionURTdkwaddHzWhl59psgxGAi6iyvDySVRFaXfsoc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteDashcaseDashfileLambdaFunction"
              },
              "CodeSha256": "lm+GU6Z2vjSx23pH6yHDq27dA+iop+7pj+7IYHDIImM="
            }
          },
          "GetDashcaseDashfileDashdataLambdaVersioniMoshju5UKXEGWbKHWMK6YkT98nMAMB11ofsBI2pZxs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetDashcaseDashfileDashdataLambdaFunction"
              },
              "CodeSha256": "eAlJ5UQUt7K1CJ9o9wcMYSs5v5xVOZQjrUE49l3JUg8="
            }
          },
          "SetDashcaseDashannotationLambdaVersionMaMWvbXWQ03ZqRlxTXOjVB01pQNTYKf98kMDPJVfoPg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SetDashcaseDashannotationLambdaFunction"
              },
              "CodeSha256": "77uMnUbrGt6Pu5ek/KxPGK5CuEv2b99t2ioY6sZ0GYI="
            }
          },
          "SearchDashcaseDashfilesDashtextLambdaVersionmhgN2euxSiWiAGGMNb7loiH7bMfzud3tZPLPtUtlDc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SearchDashcaseDashfilesDashtextLambdaFunction"
              },
              "CodeSha256": "9/94zcTIdV1qWVwlLCbPB4vxB9ucUf9QASlEQIRIcpM="
            }
          },
          "GetDashcaseDashannotationsLambdaVersionKS7amPOIhZqk7ERsj8rS3AiwVlB7wBCJnQKyrM4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetDashcaseDashannotationsLambdaFunction"
              },
              "CodeSha256": "ama1GMn+9RyffFMZnfOTz1I5V/uWSGcGZqKIS6Pi+JI="
            }
          },
          "SetDashcaseDashfileDashdescriptionLambdaVersionQ2p3yKakb81P9RvARc365iXwB9lDEV9luqfUnKTio": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SetDashcaseDashfileDashdescriptionLambdaFunction"
              },
              "CodeSha256": "Kdm22vpMDIe6dZBRgxAMLct/udjeJDMObOvQI3v8+AE="
            }
          },
          "DeleteDashcaseDashannotationLambdaVersionTn8nPyHRO83wNJ9BW5gsxFmviVGckw21Fsh057vcg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteDashcaseDashannotationLambdaFunction"
              },
              "CodeSha256": "PdbbBsz6OkfvmhCyAAnI6N9LygWeNyuHxCMYao53cuo="
            }
          },
          "SearchDashcaseDashannotationsLambdaVersionYC0YiBlB3QMshBbGZPHXIz23bZvJyjfmFa6mFwHg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SearchDashcaseDashannotationsLambdaFunction"
              },
              "CodeSha256": "77uMnUbrGt6Pu5ek/KxPGK5CuEv2b99t2ioY6sZ0GYI="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-masslawAPI",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceUsers": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "users",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUsersMe": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUsers"
              },
              "PathPart": "me",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUsersMeStatus": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUsersMe"
              },
              "PathPart": "status",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUsersUserDashdata": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUsers"
              },
              "PathPart": "user-data",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCases": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "cases",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCasesCreate": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceCases"
              },
              "PathPart": "create",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCasesGetDashmine": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceCases"
              },
              "PathPart": "get-mine",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCasesCase": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceCases"
              },
              "PathPart": "case",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCasesCaseGetDashdata": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceCasesCase"
              },
              "PathPart": "get-data",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCasesCaseData": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceCasesCase"
              },
              "PathPart": "data",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCasesCaseFiles": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceCasesCase"
              },
              "PathPart": "files",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCasesCaseFilesStartDashfileDashupload": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceCasesCaseFiles"
              },
              "PathPart": "start-file-upload",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCasesCaseFilesFinishDashfileDashupload": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceCasesCaseFiles"
              },
              "PathPart": "finish-file-upload",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCasesCaseFilesGetDashcontent": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceCasesCaseFiles"
              },
              "PathPart": "get-content",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCasesCaseFilesGetDashfileDashdata": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceCasesCaseFiles"
              },
              "PathPart": "get-file-data",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCasesCaseFilesDeleteDashfile": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceCasesCaseFiles"
              },
              "PathPart": "delete-file",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCasesCaseFilesSearchDashtext": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceCasesCaseFiles"
              },
              "PathPart": "search-text",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCasesCaseFilesSetDashdescription": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceCasesCaseFiles"
              },
              "PathPart": "set-description",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCasesCaseAnnotations": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceCasesCase"
              },
              "PathPart": "annotations",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCasesCaseAnnotationsSearch": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceCasesCaseAnnotations"
              },
              "PathPart": "search",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUsersMeStatusOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsersMeStatus"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUsersUserDashdataOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsersUserDashdata"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCasesCreateOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCreate"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCasesGetDashmineOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesGetDashmine"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCasesCaseGetDashdataOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseGetDashdata"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCasesCaseDataOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseData"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCasesCaseFilesOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseFiles"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCasesCaseFilesStartDashfileDashuploadOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseFilesStartDashfileDashupload"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCasesCaseFilesFinishDashfileDashuploadOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseFilesFinishDashfileDashupload"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCasesCaseFilesGetDashcontentOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseFilesGetDashcontent"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCasesCaseFilesGetDashfileDashdataOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseFilesGetDashfileDashdata"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCasesCaseFilesDeleteDashfileOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseFilesDeleteDashfile"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCasesCaseFilesSearchDashtextOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseFilesSearchDashtext"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCasesCaseAnnotationsOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,DELETE,POST,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseAnnotations"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCasesCaseAnnotationsSearchOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseAnnotationsSearch"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodCasesCaseFilesSetDashdescriptionOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseFilesSetDashdescription"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUsersMeStatusGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsersMeStatus"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetDashuserDashstatusLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetDashuserDashstatusLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUsersUserDashdataGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsersUserDashdata"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetDashuserDashdataLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetDashuserDashdataLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUsersUserDashdataPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsersUserDashdata"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SetDashuserDashdataLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "SetDashuserDashdataLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodCasesCreatePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCreate"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateDashcaseLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreateDashcaseLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodCasesGetDashmineGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesGetDashmine"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetDashmyDashcasesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetDashmyDashcasesLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodCasesCaseGetDashdataGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseGetDashdata"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetDashcaseDashdataDashDashdeprecatedLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetDashcaseDashdataDashDashdeprecatedLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodCasesCaseDataGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseData"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetDashcaseDashdataLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetDashcaseDashdataLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodCasesCaseDataPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseData"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SetDashcaseDashdataLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "SetDashcaseDashdataLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodCasesCaseFilesGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseFiles"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetDashcaseDashfilesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetDashcaseDashfilesLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodCasesCaseFilesStartDashfileDashuploadPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseFilesStartDashfileDashupload"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "StartDashcaseDashfileDashuploadLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "StartDashcaseDashfileDashuploadLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodCasesCaseFilesFinishDashfileDashuploadPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseFilesFinishDashfileDashupload"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FinishDashcaseDashfileDashuploadLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "FinishDashcaseDashfileDashuploadLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodCasesCaseFilesGetDashcontentGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseFilesGetDashcontent"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetDashcaseDashfileDashcontentLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetDashcaseDashfileDashcontentLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodCasesCaseFilesGetDashfileDashdataGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseFilesGetDashfileDashdata"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetDashcaseDashfileDashdataLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetDashcaseDashfileDashdataLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodCasesCaseFilesDeleteDashfileDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseFilesDeleteDashfile"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteDashcaseDashfileLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DeleteDashcaseDashfileLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodCasesCaseFilesSearchDashtextGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseFilesSearchDashtext"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SearchDashcaseDashfilesDashtextLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "SearchDashcaseDashfilesDashtextLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodCasesCaseAnnotationsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseAnnotations"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetDashcaseDashannotationsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetDashcaseDashannotationsLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodCasesCaseAnnotationsPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseAnnotations"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SetDashcaseDashannotationLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "SetDashcaseDashannotationLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodCasesCaseAnnotationsDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseAnnotations"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteDashcaseDashannotationLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DeleteDashcaseDashannotationLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodCasesCaseAnnotationsSearchGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseAnnotationsSearch"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SearchDashcaseDashannotationsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "SearchDashcaseDashannotationsLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodCasesCaseFilesSetDashdescriptionPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCasesCaseFilesSetDashdescription"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SetDashcaseDashfileDashdescriptionLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "SetDashcaseDashfileDashdescriptionLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1697986000568": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodUsersMeStatusOptions",
              "ApiGatewayMethodUsersUserDashdataOptions",
              "ApiGatewayMethodCasesCreateOptions",
              "ApiGatewayMethodCasesGetDashmineOptions",
              "ApiGatewayMethodCasesCaseGetDashdataOptions",
              "ApiGatewayMethodCasesCaseDataOptions",
              "ApiGatewayMethodCasesCaseFilesOptions",
              "ApiGatewayMethodCasesCaseFilesStartDashfileDashuploadOptions",
              "ApiGatewayMethodCasesCaseFilesFinishDashfileDashuploadOptions",
              "ApiGatewayMethodCasesCaseFilesGetDashcontentOptions",
              "ApiGatewayMethodCasesCaseFilesGetDashfileDashdataOptions",
              "ApiGatewayMethodCasesCaseFilesDeleteDashfileOptions",
              "ApiGatewayMethodCasesCaseFilesSearchDashtextOptions",
              "ApiGatewayMethodCasesCaseAnnotationsOptions",
              "ApiGatewayMethodCasesCaseAnnotationsSearchOptions",
              "ApiGatewayMethodCasesCaseFilesSetDashdescriptionOptions",
              "ApiGatewayMethodUsersMeStatusGet",
              "ApiGatewayMethodUsersUserDashdataGet",
              "ApiGatewayMethodUsersUserDashdataPost",
              "ApiGatewayMethodCasesCreatePost",
              "ApiGatewayMethodCasesGetDashmineGet",
              "ApiGatewayMethodCasesCaseGetDashdataGet",
              "ApiGatewayMethodCasesCaseDataGet",
              "ApiGatewayMethodCasesCaseDataPost",
              "ApiGatewayMethodCasesCaseFilesGet",
              "ApiGatewayMethodCasesCaseFilesStartDashfileDashuploadPost",
              "ApiGatewayMethodCasesCaseFilesFinishDashfileDashuploadPost",
              "ApiGatewayMethodCasesCaseFilesGetDashcontentGet",
              "ApiGatewayMethodCasesCaseFilesGetDashfileDashdataGet",
              "ApiGatewayMethodCasesCaseFilesDeleteDashfileDelete",
              "ApiGatewayMethodCasesCaseFilesSearchDashtextGet",
              "ApiGatewayMethodCasesCaseAnnotationsGet",
              "ApiGatewayMethodCasesCaseAnnotationsPost",
              "ApiGatewayMethodCasesCaseAnnotationsDelete",
              "ApiGatewayMethodCasesCaseAnnotationsSearchGet",
              "ApiGatewayMethodCasesCaseFilesSetDashdescriptionPost"
            ]
          },
          "GetDashuserDashstatusLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetDashuserDashstatusLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetDashuserDashdataLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetDashuserDashdataLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SetDashuserDashdataLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SetDashuserDashdataLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreateDashcaseLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateDashcaseLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetDashmyDashcasesLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetDashmyDashcasesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetDashcaseDashdataDashDashdeprecatedLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetDashcaseDashdataDashDashdeprecatedLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetDashcaseDashdataLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetDashcaseDashdataLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SetDashcaseDashdataLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SetDashcaseDashdataLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetDashcaseDashfilesLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetDashcaseDashfilesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "StartDashcaseDashfileDashuploadLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "StartDashcaseDashfileDashuploadLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "FinishDashcaseDashfileDashuploadLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "FinishDashcaseDashfileDashuploadLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetDashcaseDashfileDashcontentLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetDashcaseDashfileDashcontentLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetDashcaseDashfileDashdataLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetDashcaseDashfileDashdataLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteDashcaseDashfileLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteDashcaseDashfileLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SearchDashcaseDashfilesDashtextLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SearchDashcaseDashfilesDashtextLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetDashcaseDashannotationsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetDashcaseDashannotationsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SetDashcaseDashannotationLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SetDashcaseDashannotationLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteDashcaseDashannotationLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteDashcaseDashannotationLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SearchDashcaseDashannotationsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SearchDashcaseDashannotationsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SetDashcaseDashfileDashdescriptionLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SetDashcaseDashfileDashdescriptionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-masslawAPI-dev-ServerlessDeploymentBucketName"
            }
          },
          "GetDashuserDashdataLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetDashuserDashdataLambdaVersionT3wjhpTzjpt8eW2F2qK6oO5CAPj8xA6XXWNYjMVI50"
            },
            "Export": {
              "Name": "sls-masslawAPI-dev-GetDashuserDashdataLambdaFunctionQualifiedArn"
            }
          },
          "GetDashuserDashstatusLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetDashuserDashstatusLambdaVersionwSOMYlwXd6fh1CDrDGaWgb6UKRKXk7a5YL3sRYLWn8"
            },
            "Export": {
              "Name": "sls-masslawAPI-dev-GetDashuserDashstatusLambdaFunctionQualifiedArn"
            }
          },
          "GetDashmyDashcasesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetDashmyDashcasesLambdaVersion3EfVnfIwszqYaHNfbYx7Y5sXLiaVWw0AfFS5E0P0o"
            },
            "Export": {
              "Name": "sls-masslawAPI-dev-GetDashmyDashcasesLambdaFunctionQualifiedArn"
            }
          },
          "GetDashcaseDashdataDashDashdeprecatedLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetDashcaseDashdataDashDashdeprecatedLambdaVersionE2rXNtAxJq4xODv4pZUPyBW4DZ6i8K53qW3gHFqC8kk"
            },
            "Export": {
              "Name": "sls-masslawAPI-dev-GetDashcaseDashdataDashDashdeprecatedLambdaFunctionQualifiedArn"
            }
          },
          "GetDashcaseDashdataLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetDashcaseDashdataLambdaVersiony3qGFhhlxCHqpMDVvhc9SSmfKEhQAE2RY0MnTz2uX4"
            },
            "Export": {
              "Name": "sls-masslawAPI-dev-GetDashcaseDashdataLambdaFunctionQualifiedArn"
            }
          },
          "SetDashuserDashdataLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SetDashuserDashdataLambdaVersion4dXiS81wTqPqI7MbnlNN3Z1Xu1H1fa2XXhnyzTnT8"
            },
            "Export": {
              "Name": "sls-masslawAPI-dev-SetDashuserDashdataLambdaFunctionQualifiedArn"
            }
          },
          "CreateDashcaseLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateDashcaseLambdaVersiondB0EcuMfGldqNMaQ7Xjq9sG7nr81Ejc9ZqweEssVu0"
            },
            "Export": {
              "Name": "sls-masslawAPI-dev-CreateDashcaseLambdaFunctionQualifiedArn"
            }
          },
          "GetDashcaseDashfilesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetDashcaseDashfilesLambdaVersionq9feoxve9DEuPWzmPlYuGll8qFlDoM1hLazf6WkKk"
            },
            "Export": {
              "Name": "sls-masslawAPI-dev-GetDashcaseDashfilesLambdaFunctionQualifiedArn"
            }
          },
          "SetDashcaseDashdataLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SetDashcaseDashdataLambdaVersionMU0PLp4Or4KddvzUeeJfRVE49vw5WJDyRJi2POfw3tA"
            },
            "Export": {
              "Name": "sls-masslawAPI-dev-SetDashcaseDashdataLambdaFunctionQualifiedArn"
            }
          },
          "GetDashcaseDashfileDashcontentLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetDashcaseDashfileDashcontentLambdaVersionJs4dIobnxiyihsxnQohFOL7s5OduhMrEdQehx0Z9c"
            },
            "Export": {
              "Name": "sls-masslawAPI-dev-GetDashcaseDashfileDashcontentLambdaFunctionQualifiedArn"
            }
          },
          "StartDashcaseDashfileDashuploadLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "StartDashcaseDashfileDashuploadLambdaVersionbKzRKhJP79MfKMzG9qBebcD5SX5t3zmJM6GICJgLo"
            },
            "Export": {
              "Name": "sls-masslawAPI-dev-StartDashcaseDashfileDashuploadLambdaFunctionQualifiedArn"
            }
          },
          "FinishDashcaseDashfileDashuploadLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FinishDashcaseDashfileDashuploadLambdaVersion5aFEkhXSaOOlHUP4G7DL2ovXHDwKv9BfvbMXEa0M"
            },
            "Export": {
              "Name": "sls-masslawAPI-dev-FinishDashcaseDashfileDashuploadLambdaFunctionQualifiedArn"
            }
          },
          "DeleteDashcaseDashfileLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteDashcaseDashfileLambdaVersionURTdkwaddHzWhl59psgxGAi6iyvDySVRFaXfsoc"
            },
            "Export": {
              "Name": "sls-masslawAPI-dev-DeleteDashcaseDashfileLambdaFunctionQualifiedArn"
            }
          },
          "GetDashcaseDashfileDashdataLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetDashcaseDashfileDashdataLambdaVersioniMoshju5UKXEGWbKHWMK6YkT98nMAMB11ofsBI2pZxs"
            },
            "Export": {
              "Name": "sls-masslawAPI-dev-GetDashcaseDashfileDashdataLambdaFunctionQualifiedArn"
            }
          },
          "SetDashcaseDashannotationLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SetDashcaseDashannotationLambdaVersionMaMWvbXWQ03ZqRlxTXOjVB01pQNTYKf98kMDPJVfoPg"
            },
            "Export": {
              "Name": "sls-masslawAPI-dev-SetDashcaseDashannotationLambdaFunctionQualifiedArn"
            }
          },
          "SearchDashcaseDashfilesDashtextLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SearchDashcaseDashfilesDashtextLambdaVersionmhgN2euxSiWiAGGMNb7loiH7bMfzud3tZPLPtUtlDc"
            },
            "Export": {
              "Name": "sls-masslawAPI-dev-SearchDashcaseDashfilesDashtextLambdaFunctionQualifiedArn"
            }
          },
          "GetDashcaseDashannotationsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetDashcaseDashannotationsLambdaVersionKS7amPOIhZqk7ERsj8rS3AiwVlB7wBCJnQKyrM4"
            },
            "Export": {
              "Name": "sls-masslawAPI-dev-GetDashcaseDashannotationsLambdaFunctionQualifiedArn"
            }
          },
          "SetDashcaseDashfileDashdescriptionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SetDashcaseDashfileDashdescriptionLambdaVersionQ2p3yKakb81P9RvARc365iXwB9lDEV9luqfUnKTio"
            },
            "Export": {
              "Name": "sls-masslawAPI-dev-SetDashcaseDashfileDashdescriptionLambdaFunctionQualifiedArn"
            }
          },
          "DeleteDashcaseDashannotationLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteDashcaseDashannotationLambdaVersionTn8nPyHRO83wNJ9BW5gsxFmviVGckw21Fsh057vcg"
            },
            "Export": {
              "Name": "sls-masslawAPI-dev-DeleteDashcaseDashannotationLambdaFunctionQualifiedArn"
            }
          },
          "SearchDashcaseDashannotationsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SearchDashcaseDashannotationsLambdaVersionYC0YiBlB3QMshBbGZPHXIz23bZvJyjfmFa6mFwHg"
            },
            "Export": {
              "Name": "sls-masslawAPI-dev-SearchDashcaseDashannotationsLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-masslawAPI-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "get-user-status": {
        "handler": "lambda_src/handlers/masslaw_api/users_management/get_user_status.handler.handler",
        "role": "arn:aws:iam::746826375642:role/LambdaFullyAccessingCognito",
        "package": {
          "patterns": [
            "lambda_src/handlers/masslaw_api/users_management/get_user_status/**",
            "lambda_src/components/lambda_base/**",
            "lambda_src/components/cloudwatch_manager/**",
            "lambda_src/components/networking/**",
            "lambda_src/components/util/**",
            "lambda_src/components/cognito_manager/**",
            "lambda_src/components/masslaw_users/**"
          ],
          "artifact": "/Users/idanshemesh/Masslaw/Repositories/Masslaw/CloudLogic/src/.serverless/get-user-status.zip"
        },
        "environment": {
          "deployed": "true"
        },
        "events": [
          {
            "http": {
              "path": "users/me/status",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "masslawAPI-dev-get-user-status",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "GetDashuserDashstatusLambdaVersionwSOMYlwXd6fh1CDrDGaWgb6UKRKXk7a5YL3sRYLWn8"
      },
      "get-user-data": {
        "handler": "lambda_src/handlers/masslaw_api/users_management/get_user_data.handler.handler",
        "role": "arn:aws:iam::746826375642:role/LambdaFullyAccessingCognito",
        "package": {
          "patterns": [
            "lambda_src/handlers/masslaw_api/users_management/get_user_data/**",
            "lambda_src/components/lambda_base/**",
            "lambda_src/components/cloudwatch_manager/**",
            "lambda_src/components/networking/**",
            "lambda_src/components/util/**",
            "lambda_src/components/cognito_manager/**",
            "lambda_src/components/masslaw_users/**"
          ],
          "artifact": "/Users/idanshemesh/Masslaw/Repositories/Masslaw/CloudLogic/src/.serverless/get-user-data.zip"
        },
        "environment": {
          "deployed": "true"
        },
        "events": [
          {
            "http": {
              "path": "users/user-data",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "masslawAPI-dev-get-user-data",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "GetDashuserDashdataLambdaVersionT3wjhpTzjpt8eW2F2qK6oO5CAPj8xA6XXWNYjMVI50"
      },
      "set-user-data": {
        "handler": "lambda_src/handlers/masslaw_api/users_management/set_user_data.handler.handler",
        "role": "arn:aws:iam::746826375642:role/LambdaFullyAccessingCognito",
        "environment": {
          "deployed": "true"
        },
        "package": {
          "patterns": [
            "lambda_src/handlers/masslaw_api/users_management/set_user_data/**",
            "lambda_src/components/lambda_base/**",
            "lambda_src/components/cloudwatch_manager/**",
            "lambda_src/components/networking/**",
            "lambda_src/components/util/**",
            "lambda_src/components/cognito_manager/**",
            "lambda_src/components/masslaw_users/**"
          ],
          "artifact": "/Users/idanshemesh/Masslaw/Repositories/Masslaw/CloudLogic/src/.serverless/set-user-data.zip"
        },
        "events": [
          {
            "http": {
              "path": "users/user-data",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "masslawAPI-dev-set-user-data",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "SetDashuserDashdataLambdaVersion4dXiS81wTqPqI7MbnlNN3Z1Xu1H1fa2XXhnyzTnT8"
      },
      "create-case": {
        "handler": "lambda_src/handlers/masslaw_api/cases_management/create_case.handler.handler",
        "role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole",
        "environment": {
          "deployed": "true"
        },
        "package": {
          "patterns": [
            "lambda_src/handlers/masslaw_api/cases_management/create_case/**",
            "lambda_src/components/lambda_base/**",
            "lambda_src/components/cloudwatch_manager/**",
            "lambda_src/components/networking/**",
            "lambda_src/components/util/**",
            "lambda_src/components/cognito_manager/**",
            "lambda_src/components/masslaw_users/**",
            "lambda_src/components/masslaw_cases/**",
            "lambda_src/components/masslaw_cloud_configurations/**",
            "lambda_src/components/opensearch_manager/**",
            "lambda_src/components/mlcp/**",
            "lambda_src/components/dynamoDB_manager/**",
            "lambda_src/components/S3_manager/**",
            "lambda_src/components/iam_manager/**",
            "lambda_src/components/step_functions_manager/**"
          ],
          "artifact": "/Users/idanshemesh/Masslaw/Repositories/Masslaw/CloudLogic/src/.serverless/create-case.zip"
        },
        "events": [
          {
            "http": {
              "path": "cases/create",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "masslawAPI-dev-create-case",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "CreateDashcaseLambdaVersiondB0EcuMfGldqNMaQ7Xjq9sG7nr81Ejc9ZqweEssVu0"
      },
      "get-my-cases": {
        "handler": "lambda_src/handlers/masslaw_api/cases_management/get_my_cases.handler.handler",
        "role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole",
        "environment": {
          "deployed": "true"
        },
        "package": {
          "patterns": [
            "lambda_src/handlers/masslaw_api/cases_management/get_my_cases/**",
            "lambda_src/components/lambda_base/**",
            "lambda_src/components/cloudwatch_manager/**",
            "lambda_src/components/networking/**",
            "lambda_src/components/util/**",
            "lambda_src/components/cognito_manager/**",
            "lambda_src/components/masslaw_users/**",
            "lambda_src/components/masslaw_cases/**",
            "lambda_src/components/masslaw_cloud_configurations/**",
            "lambda_src/components/opensearch_manager/**",
            "lambda_src/components/mlcp/**",
            "lambda_src/components/dynamoDB_manager/**",
            "lambda_src/components/S3_manager/**",
            "lambda_src/components/iam_manager/**",
            "lambda_src/components/step_functions_manager/**"
          ],
          "artifact": "/Users/idanshemesh/Masslaw/Repositories/Masslaw/CloudLogic/src/.serverless/get-my-cases.zip"
        },
        "events": [
          {
            "http": {
              "path": "cases/get-mine",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "masslawAPI-dev-get-my-cases",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "GetDashmyDashcasesLambdaVersion3EfVnfIwszqYaHNfbYx7Y5sXLiaVWw0AfFS5E0P0o"
      },
      "get-case-data--deprecated": {
        "handler": "lambda_src/handlers/masslaw_api/cases_management/get_case_data.handler.handler",
        "role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole",
        "environment": {
          "deployed": "true"
        },
        "package": {
          "patterns": [
            "lambda_src/handlers/masslaw_api/cases_management/get_case_data/**",
            "lambda_src/components/lambda_base/**",
            "lambda_src/components/cloudwatch_manager/**",
            "lambda_src/components/networking/**",
            "lambda_src/components/util/**",
            "lambda_src/components/cognito_manager/**",
            "lambda_src/components/masslaw_users/**",
            "lambda_src/components/masslaw_cases/**",
            "lambda_src/components/masslaw_cloud_configurations/**",
            "lambda_src/components/opensearch_manager/**",
            "lambda_src/components/mlcp/**",
            "lambda_src/components/dynamoDB_manager/**",
            "lambda_src/components/S3_manager/**",
            "lambda_src/components/iam_manager/**",
            "lambda_src/components/step_functions_manager/**"
          ],
          "artifact": "/Users/idanshemesh/Masslaw/Repositories/Masslaw/CloudLogic/src/.serverless/get-case-data--deprecated.zip"
        },
        "events": [
          {
            "http": {
              "path": "cases/case/get-data",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "masslawAPI-dev-get-case-data--deprecated",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "GetDashcaseDashdataDashDashdeprecatedLambdaVersionE2rXNtAxJq4xODv4pZUPyBW4DZ6i8K53qW3gHFqC8kk"
      },
      "get-case-data": {
        "handler": "lambda_src/handlers/masslaw_api/cases_management/get_case_data.handler.handler",
        "role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole",
        "environment": {
          "deployed": "true"
        },
        "package": {
          "patterns": [
            "lambda_src/handlers/masslaw_api/cases_management/get_case_data/**",
            "lambda_src/components/lambda_base/**",
            "lambda_src/components/cloudwatch_manager/**",
            "lambda_src/components/networking/**",
            "lambda_src/components/util/**",
            "lambda_src/components/cognito_manager/**",
            "lambda_src/components/masslaw_users/**",
            "lambda_src/components/masslaw_cases/**",
            "lambda_src/components/masslaw_cloud_configurations/**",
            "lambda_src/components/opensearch_manager/**",
            "lambda_src/components/mlcp/**",
            "lambda_src/components/dynamoDB_manager/**",
            "lambda_src/components/S3_manager/**",
            "lambda_src/components/iam_manager/**",
            "lambda_src/components/step_functions_manager/**"
          ],
          "artifact": "/Users/idanshemesh/Masslaw/Repositories/Masslaw/CloudLogic/src/.serverless/get-case-data.zip"
        },
        "events": [
          {
            "http": {
              "path": "cases/case/data",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "masslawAPI-dev-get-case-data",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "GetDashcaseDashdataLambdaVersiony3qGFhhlxCHqpMDVvhc9SSmfKEhQAE2RY0MnTz2uX4"
      },
      "set-case-data": {
        "handler": "lambda_src/handlers/masslaw_api/cases_management/set_case_data.handler.handler",
        "role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole",
        "environment": {
          "deployed": "true"
        },
        "package": {
          "patterns": [
            "lambda_src/handlers/masslaw_api/cases_management/set_case_data/**",
            "lambda_src/components/lambda_base/**",
            "lambda_src/components/cloudwatch_manager/**",
            "lambda_src/components/networking/**",
            "lambda_src/components/util/**",
            "lambda_src/components/cognito_manager/**",
            "lambda_src/components/masslaw_users/**",
            "lambda_src/components/masslaw_cases/**",
            "lambda_src/components/masslaw_cloud_configurations/**",
            "lambda_src/components/opensearch_manager/**",
            "lambda_src/components/mlcp/**",
            "lambda_src/components/dynamoDB_manager/**",
            "lambda_src/components/S3_manager/**",
            "lambda_src/components/iam_manager/**",
            "lambda_src/components/step_functions_manager/**"
          ],
          "artifact": "/Users/idanshemesh/Masslaw/Repositories/Masslaw/CloudLogic/src/.serverless/set-case-data.zip"
        },
        "events": [
          {
            "http": {
              "path": "cases/case/data",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "masslawAPI-dev-set-case-data",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "SetDashcaseDashdataLambdaVersionMU0PLp4Or4KddvzUeeJfRVE49vw5WJDyRJi2POfw3tA"
      },
      "get-case-files": {
        "handler": "lambda_src/handlers/masslaw_api/cases_management/get_case_files_data.handler.handler",
        "role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole",
        "environment": {
          "deployed": "true"
        },
        "package": {
          "patterns": [
            "lambda_src/handlers/masslaw_api/cases_management/get_case_files_data/**",
            "lambda_src/components/lambda_base/**",
            "lambda_src/components/cloudwatch_manager/**",
            "lambda_src/components/networking/**",
            "lambda_src/components/util/**",
            "lambda_src/components/cognito_manager/**",
            "lambda_src/components/masslaw_users/**",
            "lambda_src/components/masslaw_cases/**",
            "lambda_src/components/masslaw_cloud_configurations/**",
            "lambda_src/components/opensearch_manager/**",
            "lambda_src/components/mlcp/**",
            "lambda_src/components/dynamoDB_manager/**",
            "lambda_src/components/S3_manager/**",
            "lambda_src/components/iam_manager/**",
            "lambda_src/components/step_functions_manager/**"
          ],
          "artifact": "/Users/idanshemesh/Masslaw/Repositories/Masslaw/CloudLogic/src/.serverless/get-case-files.zip"
        },
        "events": [
          {
            "http": {
              "path": "cases/case/files",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "masslawAPI-dev-get-case-files",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "GetDashcaseDashfilesLambdaVersionq9feoxve9DEuPWzmPlYuGll8qFlDoM1hLazf6WkKk"
      },
      "start-case-file-upload": {
        "handler": "lambda_src/handlers/masslaw_api/cases_management/start_case_file_upload.handler.handler",
        "role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole",
        "environment": {
          "deployed": "true"
        },
        "package": {
          "patterns": [
            "lambda_src/handlers/masslaw_api/cases_management/start_case_file_upload/**",
            "lambda_src/components/lambda_base/**",
            "lambda_src/components/cloudwatch_manager/**",
            "lambda_src/components/networking/**",
            "lambda_src/components/util/**",
            "lambda_src/components/cognito_manager/**",
            "lambda_src/components/masslaw_users/**",
            "lambda_src/components/masslaw_cases/**",
            "lambda_src/components/masslaw_cloud_configurations/**",
            "lambda_src/components/opensearch_manager/**",
            "lambda_src/components/mlcp/**",
            "lambda_src/components/dynamoDB_manager/**",
            "lambda_src/components/S3_manager/**",
            "lambda_src/components/iam_manager/**",
            "lambda_src/components/step_functions_manager/**"
          ],
          "artifact": "/Users/idanshemesh/Masslaw/Repositories/Masslaw/CloudLogic/src/.serverless/start-case-file-upload.zip"
        },
        "events": [
          {
            "http": {
              "path": "cases/case/files/start-file-upload",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "masslawAPI-dev-start-case-file-upload",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "StartDashcaseDashfileDashuploadLambdaVersionbKzRKhJP79MfKMzG9qBebcD5SX5t3zmJM6GICJgLo"
      },
      "finish-case-file-upload": {
        "handler": "lambda_src/handlers/masslaw_api/cases_management/finish_case_file_upload.handler.handler",
        "role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole",
        "environment": {
          "deployed": "true"
        },
        "package": {
          "patterns": [
            "lambda_src/handlers/masslaw_api/cases_management/finish_case_file_upload/**",
            "lambda_src/components/lambda_base/**",
            "lambda_src/components/cloudwatch_manager/**",
            "lambda_src/components/networking/**",
            "lambda_src/components/util/**",
            "lambda_src/components/cognito_manager/**",
            "lambda_src/components/masslaw_users/**",
            "lambda_src/components/masslaw_cases/**",
            "lambda_src/components/masslaw_cloud_configurations/**",
            "lambda_src/components/opensearch_manager/**",
            "lambda_src/components/mlcp/**",
            "lambda_src/components/dynamoDB_manager/**",
            "lambda_src/components/S3_manager/**",
            "lambda_src/components/iam_manager/**",
            "lambda_src/components/step_functions_manager/**"
          ],
          "artifact": "/Users/idanshemesh/Masslaw/Repositories/Masslaw/CloudLogic/src/.serverless/finish-case-file-upload.zip"
        },
        "events": [
          {
            "http": {
              "path": "cases/case/files/finish-file-upload",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "masslawAPI-dev-finish-case-file-upload",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "FinishDashcaseDashfileDashuploadLambdaVersion5aFEkhXSaOOlHUP4G7DL2ovXHDwKv9BfvbMXEa0M"
      },
      "get-case-file-content": {
        "handler": "lambda_src/handlers/masslaw_api/cases_management/get_case_file_content.handler.handler",
        "role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole",
        "environment": {
          "deployed": "true"
        },
        "package": {
          "patterns": [
            "lambda_src/handlers/masslaw_api/cases_management/get_case_file_content/**",
            "lambda_src/components/lambda_base/**",
            "lambda_src/components/cloudwatch_manager/**",
            "lambda_src/components/networking/**",
            "lambda_src/components/util/**",
            "lambda_src/components/cognito_manager/**",
            "lambda_src/components/masslaw_users/**",
            "lambda_src/components/masslaw_cases/**",
            "lambda_src/components/masslaw_cloud_configurations/**",
            "lambda_src/components/opensearch_manager/**",
            "lambda_src/components/mlcp/**",
            "lambda_src/components/dynamoDB_manager/**",
            "lambda_src/components/S3_manager/**",
            "lambda_src/components/iam_manager/**",
            "lambda_src/components/step_functions_manager/**"
          ],
          "artifact": "/Users/idanshemesh/Masslaw/Repositories/Masslaw/CloudLogic/src/.serverless/get-case-file-content.zip"
        },
        "events": [
          {
            "http": {
              "path": "cases/case/files/get-content",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "masslawAPI-dev-get-case-file-content",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "GetDashcaseDashfileDashcontentLambdaVersionJs4dIobnxiyihsxnQohFOL7s5OduhMrEdQehx0Z9c"
      },
      "get-case-file-data": {
        "handler": "lambda_src/handlers/masslaw_api/cases_management/get_case_file_data.handler.handler",
        "role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole",
        "environment": {
          "deployed": "true"
        },
        "package": {
          "patterns": [
            "lambda_src/handlers/masslaw_api/cases_management/get_case_file_data/**",
            "lambda_src/components/lambda_base/**",
            "lambda_src/components/cloudwatch_manager/**",
            "lambda_src/components/networking/**",
            "lambda_src/components/util/**",
            "lambda_src/components/cognito_manager/**",
            "lambda_src/components/masslaw_users/**",
            "lambda_src/components/masslaw_cases/**",
            "lambda_src/components/masslaw_cloud_configurations/**",
            "lambda_src/components/opensearch_manager/**",
            "lambda_src/components/mlcp/**",
            "lambda_src/components/dynamoDB_manager/**",
            "lambda_src/components/S3_manager/**",
            "lambda_src/components/iam_manager/**",
            "lambda_src/components/step_functions_manager/**"
          ],
          "artifact": "/Users/idanshemesh/Masslaw/Repositories/Masslaw/CloudLogic/src/.serverless/get-case-file-data.zip"
        },
        "events": [
          {
            "http": {
              "path": "cases/case/files/get-file-data",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "masslawAPI-dev-get-case-file-data",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "GetDashcaseDashfileDashdataLambdaVersioniMoshju5UKXEGWbKHWMK6YkT98nMAMB11ofsBI2pZxs"
      },
      "delete-case-file": {
        "handler": "lambda_src/handlers/masslaw_api/cases_management/delete_case_file.handler.handler",
        "role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole",
        "environment": {
          "deployed": "true"
        },
        "package": {
          "patterns": [
            "lambda_src/handlers/masslaw_api/cases_management/delete_case_file/**",
            "lambda_src/components/lambda_base/**",
            "lambda_src/components/cloudwatch_manager/**",
            "lambda_src/components/networking/**",
            "lambda_src/components/util/**",
            "lambda_src/components/cognito_manager/**",
            "lambda_src/components/masslaw_users/**",
            "lambda_src/components/masslaw_cases/**",
            "lambda_src/components/masslaw_cloud_configurations/**",
            "lambda_src/components/opensearch_manager/**",
            "lambda_src/components/mlcp/**",
            "lambda_src/components/dynamoDB_manager/**",
            "lambda_src/components/S3_manager/**",
            "lambda_src/components/iam_manager/**",
            "lambda_src/components/step_functions_manager/**"
          ],
          "artifact": "/Users/idanshemesh/Masslaw/Repositories/Masslaw/CloudLogic/src/.serverless/delete-case-file.zip"
        },
        "events": [
          {
            "http": {
              "path": "cases/case/files/delete-file",
              "method": "delete",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "DELETE"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "masslawAPI-dev-delete-case-file",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "DeleteDashcaseDashfileLambdaVersionURTdkwaddHzWhl59psgxGAi6iyvDySVRFaXfsoc"
      },
      "search-case-files-text": {
        "handler": "lambda_src/handlers/masslaw_api/cases_management/search_case_files_text.handler.handler",
        "role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole",
        "environment": {
          "deployed": "true"
        },
        "package": {
          "patterns": [
            "lambda_src/handlers/masslaw_api/cases_management/search_case_files_text/**",
            "lambda_src/components/lambda_base/**",
            "lambda_src/components/cloudwatch_manager/**",
            "lambda_src/components/networking/**",
            "lambda_src/components/util/**",
            "lambda_src/components/cognito_manager/**",
            "lambda_src/components/masslaw_users/**",
            "lambda_src/components/masslaw_cases/**",
            "lambda_src/components/masslaw_cloud_configurations/**",
            "lambda_src/components/opensearch_manager/**",
            "lambda_src/components/mlcp/**",
            "lambda_src/components/dynamoDB_manager/**",
            "lambda_src/components/S3_manager/**",
            "lambda_src/components/iam_manager/**",
            "lambda_src/components/step_functions_manager/**"
          ],
          "artifact": "/Users/idanshemesh/Masslaw/Repositories/Masslaw/CloudLogic/src/.serverless/search-case-files-text.zip"
        },
        "events": [
          {
            "http": {
              "path": "cases/case/files/search-text",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "masslawAPI-dev-search-case-files-text",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "SearchDashcaseDashfilesDashtextLambdaVersionmhgN2euxSiWiAGGMNb7loiH7bMfzud3tZPLPtUtlDc"
      },
      "get-case-annotations": {
        "handler": "lambda_src/handlers/masslaw_api/cases_management/get_case_annotations.handler.handler",
        "role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole",
        "environment": {
          "deployed": "true"
        },
        "package": {
          "patterns": [
            "lambda_src/handlers/masslaw_api/cases_management/get_case_annotations/**",
            "lambda_src/components/lambda_base/**",
            "lambda_src/components/cloudwatch_manager/**",
            "lambda_src/components/networking/**",
            "lambda_src/components/util/**",
            "lambda_src/components/cognito_manager/**",
            "lambda_src/components/masslaw_users/**",
            "lambda_src/components/masslaw_cases/**",
            "lambda_src/components/masslaw_cloud_configurations/**",
            "lambda_src/components/opensearch_manager/**",
            "lambda_src/components/mlcp/**",
            "lambda_src/components/dynamoDB_manager/**",
            "lambda_src/components/S3_manager/**",
            "lambda_src/components/iam_manager/**",
            "lambda_src/components/step_functions_manager/**"
          ],
          "artifact": "/Users/idanshemesh/Masslaw/Repositories/Masslaw/CloudLogic/src/.serverless/get-case-annotations.zip"
        },
        "events": [
          {
            "http": {
              "path": "cases/case/annotations",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "masslawAPI-dev-get-case-annotations",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "GetDashcaseDashannotationsLambdaVersionKS7amPOIhZqk7ERsj8rS3AiwVlB7wBCJnQKyrM4"
      },
      "set-case-annotation": {
        "handler": "lambda_src/handlers/masslaw_api/cases_management/set_case_file_annotation.handler.handler",
        "role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole",
        "environment": {
          "deployed": "true"
        },
        "package": {
          "patterns": [
            "lambda_src/handlers/masslaw_api/cases_management/set_case_file_annotation/**",
            "lambda_src/components/lambda_base/**",
            "lambda_src/components/cloudwatch_manager/**",
            "lambda_src/components/networking/**",
            "lambda_src/components/util/**",
            "lambda_src/components/cognito_manager/**",
            "lambda_src/components/masslaw_users/**",
            "lambda_src/components/masslaw_cases/**",
            "lambda_src/components/masslaw_cloud_configurations/**",
            "lambda_src/components/opensearch_manager/**",
            "lambda_src/components/mlcp/**",
            "lambda_src/components/dynamoDB_manager/**",
            "lambda_src/components/S3_manager/**",
            "lambda_src/components/iam_manager/**",
            "lambda_src/components/step_functions_manager/**"
          ],
          "artifact": "/Users/idanshemesh/Masslaw/Repositories/Masslaw/CloudLogic/src/.serverless/set-case-annotation.zip"
        },
        "events": [
          {
            "http": {
              "path": "cases/case/annotations",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "masslawAPI-dev-set-case-annotation",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "SetDashcaseDashannotationLambdaVersionMaMWvbXWQ03ZqRlxTXOjVB01pQNTYKf98kMDPJVfoPg"
      },
      "delete-case-annotation": {
        "handler": "lambda_src/handlers/masslaw_api/cases_management/delete_case_file_annotation.handler.handler",
        "role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole",
        "environment": {
          "deployed": "true"
        },
        "package": {
          "patterns": [
            "lambda_src/handlers/masslaw_api/cases_management/delete_case_file_annotation/**",
            "lambda_src/components/lambda_base/**",
            "lambda_src/components/cloudwatch_manager/**",
            "lambda_src/components/networking/**",
            "lambda_src/components/util/**",
            "lambda_src/components/cognito_manager/**",
            "lambda_src/components/masslaw_users/**",
            "lambda_src/components/masslaw_cases/**",
            "lambda_src/components/masslaw_cloud_configurations/**",
            "lambda_src/components/opensearch_manager/**",
            "lambda_src/components/mlcp/**",
            "lambda_src/components/dynamoDB_manager/**",
            "lambda_src/components/S3_manager/**",
            "lambda_src/components/iam_manager/**",
            "lambda_src/components/step_functions_manager/**"
          ],
          "artifact": "/Users/idanshemesh/Masslaw/Repositories/Masslaw/CloudLogic/src/.serverless/delete-case-annotation.zip"
        },
        "events": [
          {
            "http": {
              "path": "cases/case/annotations",
              "method": "delete",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "DELETE"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "masslawAPI-dev-delete-case-annotation",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "DeleteDashcaseDashannotationLambdaVersionTn8nPyHRO83wNJ9BW5gsxFmviVGckw21Fsh057vcg"
      },
      "search-case-annotations": {
        "handler": "lambda_src/handlers/masslaw_api/cases_management/set_case_file_annotation.handler.handler",
        "role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole",
        "environment": {
          "deployed": "true"
        },
        "package": {
          "patterns": [
            "lambda_src/handlers/masslaw_api/cases_management/set_case_file_annotation/**",
            "lambda_src/components/lambda_base/**",
            "lambda_src/components/cloudwatch_manager/**",
            "lambda_src/components/networking/**",
            "lambda_src/components/util/**",
            "lambda_src/components/cognito_manager/**",
            "lambda_src/components/masslaw_users/**",
            "lambda_src/components/masslaw_cases/**",
            "lambda_src/components/masslaw_cloud_configurations/**",
            "lambda_src/components/opensearch_manager/**",
            "lambda_src/components/mlcp/**",
            "lambda_src/components/dynamoDB_manager/**",
            "lambda_src/components/S3_manager/**",
            "lambda_src/components/iam_manager/**",
            "lambda_src/components/step_functions_manager/**"
          ],
          "artifact": "/Users/idanshemesh/Masslaw/Repositories/Masslaw/CloudLogic/src/.serverless/search-case-annotations.zip"
        },
        "events": [
          {
            "http": {
              "path": "cases/case/annotations/search",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "masslawAPI-dev-search-case-annotations",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "SearchDashcaseDashannotationsLambdaVersionYC0YiBlB3QMshBbGZPHXIz23bZvJyjfmFa6mFwHg"
      },
      "set-case-file-description": {
        "handler": "lambda_src/handlers/masslaw_api/cases_management/set_case_file_description.handler.handler",
        "role": "arn:aws:iam::746826375642:role/LambdaMasslawCasesHandlerRole",
        "environment": {
          "deployed": "true"
        },
        "package": {
          "patterns": [
            "lambda_src/handlers/masslaw_api/cases_management/set_case_file_description/**",
            "lambda_src/components/lambda_base/**",
            "lambda_src/components/cloudwatch_manager/**",
            "lambda_src/components/networking/**",
            "lambda_src/components/util/**",
            "lambda_src/components/cognito_manager/**",
            "lambda_src/components/masslaw_users/**",
            "lambda_src/components/masslaw_cases/**",
            "lambda_src/components/masslaw_cloud_configurations/**",
            "lambda_src/components/opensearch_manager/**",
            "lambda_src/components/mlcp/**",
            "lambda_src/components/dynamoDB_manager/**",
            "lambda_src/components/S3_manager/**",
            "lambda_src/components/iam_manager/**",
            "lambda_src/components/step_functions_manager/**"
          ],
          "artifact": "/Users/idanshemesh/Masslaw/Repositories/Masslaw/CloudLogic/src/.serverless/set-case-file-description.zip"
        },
        "events": [
          {
            "http": {
              "path": "cases/case/files/set-description",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "masslawAPI-dev-set-case-file-description",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "SetDashcaseDashfileDashdescriptionLambdaVersionQ2p3yKakb81P9RvARc365iXwB9lDEV9luqfUnKTio"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "sls-masslawAPI.yml",
    "initialServerlessConfig": {
      "service": "masslawAPI",
      "frameworkVersion": "3",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "individually": true,
        "patterns": [
          "!**"
        ],
        "artifactsS3KeyDirname": "serverless/masslawAPI/dev/code-artifacts",
        "artifactDirectoryName": "serverless/masslawAPI/dev/1697986002198-2023-10-22T14:46:42.198Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/masslawAPI/dev/1697986002198-2023-10-22T14:46:42.198Z",
    "artifact": ""
  }
}